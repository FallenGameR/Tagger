//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.239
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace LockWatcher {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "4.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class Constants {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal Constants() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("LockWatcher.Constants", typeof(Constants).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Status: {0} Wait: {1} CS: {2:N0}.
        /// </summary>
        internal static string AllDataFmt {
            get {
                return ResourceManager.GetString("AllDataFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The array must not be null or of zero length..
        /// </summary>
        internal static string ArrayMustBeValid {
            get {
                return ResourceManager.GetString("ArrayMustBeValid", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid process ID pass on the command line..
        /// </summary>
        internal static string CannotParseProcessId {
            get {
                return ResourceManager.GetString("CannotParseProcessId", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Invalid time specified to the -time switch..
        /// </summary>
        internal static string CannotParseTime {
            get {
                return ResourceManager.GetString("CannotParseTime", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **Following thread is DEADLOCKED!.
        /// </summary>
        internal static string DeadlockNotification {
            get {
                return ResourceManager.GetString("DeadlockNotification", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Error.
        /// </summary>
        internal static string ErrorText {
            get {
                return ResourceManager.GetString("ErrorText", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0}.EXE.
        /// </summary>
        internal static string ExeFmt {
            get {
                return ResourceManager.GetString("ExeFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to An invalid parameter was passed to the method..
        /// </summary>
        internal static string InvalidParameter {
            get {
                return ResourceManager.GetString("InvalidParameter", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to LockWatcher {0}
        ///(c) 2007, John Robbins - john@wintellect.com
        ///.
        /// </summary>
        internal static string LogoMessage {
            get {
                return ResourceManager.GetString("LogoMessage", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Unable to open Wait Thread Chain..
        /// </summary>
        internal static string NoOpenWCTHandle {
            get {
                return ResourceManager.GetString("NoOpenWCTHandle", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to  Name: {0}.
        /// </summary>
        internal static string ObjectNameFmt {
            get {
                return ResourceManager.GetString("ObjectNameFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to , Status: {0}.
        /// </summary>
        internal static string ObjectStatusFmt {
            get {
                return ResourceManager.GetString("ObjectStatusFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} Status: {1}.
        /// </summary>
        internal static string ObjectTypeFmt {
            get {
                return ResourceManager.GetString("ObjectTypeFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to PID: {0} {1}.
        /// </summary>
        internal static string OwningFmt {
            get {
                return ResourceManager.GetString("OwningFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to [PID:{0} {1}].
        /// </summary>
        internal static string OwningProcessFmt {
            get {
                return ResourceManager.GetString("OwningProcessFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Command line switch error: {0}.
        /// </summary>
        internal static string ParseError {
            get {
                return ResourceManager.GetString("ParseError", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process : {0}, PID : {1}.
        /// </summary>
        internal static string ProcessDataFmt {
            get {
                return ResourceManager.GetString("ProcessDataFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Process {0} is not running..
        /// </summary>
        internal static string ProcessNotRunningFmt {
            get {
                return ResourceManager.GetString("ProcessNotRunningFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to The process ID {0} does not exist.
        /// </summary>
        internal static string ProcIdInvalidFmt {
            get {
                return ResourceManager.GetString("ProcIdInvalidFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TID: {0,4}.
        /// </summary>
        internal static string TidFmt {
            get {
                return ResourceManager.GetString("TidFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to TID: {0,4} Unable to retrieve wait chains.
        /// </summary>
        internal static string UnableToGetWaitChainsFmt {
            get {
                return ResourceManager.GetString("UnableToGetWaitChainsFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to **UNKNOWN** Object Type Enum!.
        /// </summary>
        internal static string UnknownObjectType {
            get {
                return ResourceManager.GetString("UnknownObjectType", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {0} is not a valid privilege name.
        /// </summary>
        internal static string UnknownPrivNameFmt {
            get {
                return ResourceManager.GetString("UnknownPrivNameFmt", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to Looks for deadlocks.
        ///LockWatcher [-all] [-nologo] [-debug] [-time #] &lt;PID&gt;...
        ///    -?        - This help.
        ///    -nologo   - Don&apos;t show logo information.
        ///    -all      - Show all thread data (short:-a)
        ///    -time #   - The number of seconds between updates. (short:-t)
        ///    &lt;PID&gt;...  - The process ID(s) to look at. None means all processes..
        /// </summary>
        internal static string UsageMessage {
            get {
                return ResourceManager.GetString("UsageMessage", resourceCulture);
            }
        }
    }
}
